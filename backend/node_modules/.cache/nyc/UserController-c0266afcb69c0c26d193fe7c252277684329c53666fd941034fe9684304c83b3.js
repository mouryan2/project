function cov_ri1llwlzz(){var path="C:\\Users\\mnalagat\\Desktop\\project\\backend\\controller\\UserController.js";var hash="f33cfd4cdbefd19ee61307b309e76619bbdc60fe";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\mnalagat\\Desktop\\project\\backend\\controller\\UserController.js",statementMap:{"0":{start:{line:1,column:13},end:{line:1,column:38}},"1":{start:{line:2,column:15},end:{line:2,column:32}},"2":{start:{line:3,column:12},end:{line:3,column:35}},"3":{start:{line:4,column:15},end:{line:21,column:1}},"4":{start:{line:6,column:4},end:{line:20,column:5}},"5":{start:{line:7,column:35},end:{line:7,column:43}},"6":{start:{line:10,column:8},end:{line:10,column:51}},"7":{start:{line:12,column:19},end:{line:12,column:49}},"8":{start:{line:15,column:8},end:{line:17,column:11}},"9":{start:{line:19,column:8},end:{line:19,column:57}},"10":{start:{line:23,column:15},end:{line:37,column:1}},"11":{start:{line:24,column:4},end:{line:36,column:5}},"12":{start:{line:25,column:35},end:{line:25,column:43}},"13":{start:{line:26,column:19},end:{line:26,column:49}},"14":{start:{line:27,column:20},end:{line:27,column:65}},"15":{start:{line:28,column:8},end:{line:30,column:9}},"16":{start:{line:29,column:12},end:{line:29,column:56}},"17":{start:{line:31,column:29},end:{line:31,column:97}},"18":{start:{line:32,column:8},end:{line:32,column:56}},"19":{start:{line:34,column:8},end:{line:34,column:35}},"20":{start:{line:35,column:8},end:{line:35,column:57}},"21":{start:{line:38,column:0},end:{line:38,column:35}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:4,column:15},end:{line:4,column:16}},loc:{start:{line:4,column:35},end:{line:21,column:1}},line:4},"1":{name:"(anonymous_1)",decl:{start:{line:23,column:15},end:{line:23,column:16}},loc:{start:{line:23,column:35},end:{line:37,column:1}},line:23}},branchMap:{"0":{loc:{start:{line:28,column:8},end:{line:30,column:9}},type:"if",locations:[{start:{line:28,column:8},end:{line:30,column:9}},{start:{line:28,column:8},end:{line:30,column:9}}],line:28}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},f:{"0":0,"1":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"f33cfd4cdbefd19ee61307b309e76619bbdc60fe"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_ri1llwlzz=function(){return actualCoverage;};}return actualCoverage;}cov_ri1llwlzz();const User=(cov_ri1llwlzz().s[0]++,require('../models/User'));const bcrypt=(cov_ri1llwlzz().s[1]++,require('bcrypt'));const jwt=(cov_ri1llwlzz().s[2]++,require('jsonwebtoken'));cov_ri1llwlzz().s[3]++;const signUp=async(req,res)=>{cov_ri1llwlzz().f[0]++;cov_ri1llwlzz().s[4]++;try{let{userId,password}=(cov_ri1llwlzz().s[5]++,req.body);// console.log(userId,password);
cov_ri1llwlzz().s[6]++;password=await bcrypt.hash(password,15);// console.log(password);
let user=(cov_ri1llwlzz().s[7]++,new User({userId,password}));//  let response = await user.save();
cov_ri1llwlzz().s[8]++;res.status(200).send({"message":response.userId+" "+'registered successfully'});}catch(error){cov_ri1llwlzz().s[9]++;res.status(400).send({"error":error.message});}};cov_ri1llwlzz().s[10]++;const signIn=async(req,res)=>{cov_ri1llwlzz().f[1]++;cov_ri1llwlzz().s[11]++;try{let{userId,password}=(cov_ri1llwlzz().s[12]++,req.body);let user=(cov_ri1llwlzz().s[13]++,await User.findOne({userId}));let valid=(cov_ri1llwlzz().s[14]++,await bcrypt.compare(password,user.password));cov_ri1llwlzz().s[15]++;if(!valid){cov_ri1llwlzz().b[0][0]++;cov_ri1llwlzz().s[16]++;throw new Error("password does not matched");}else{cov_ri1llwlzz().b[0][1]++;}const jsonwebtoken=(cov_ri1llwlzz().s[17]++,jwt.sign({id:userId},'CISCO_MINDTREE',{expiresIn:'4000000'}));cov_ri1llwlzz().s[18]++;res.status(200).send({"token":jsonwebtoken});}catch(error){cov_ri1llwlzz().s[19]++;console.log(error.message);cov_ri1llwlzz().s[20]++;res.status(400).send({"error":error.message});}};cov_ri1llwlzz().s[21]++;module.exports={signUp,signIn};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlVzZXJDb250cm9sbGVyLmpzIl0sIm5hbWVzIjpbIlVzZXIiLCJyZXF1aXJlIiwiYmNyeXB0Iiwiand0Iiwic2lnblVwIiwicmVxIiwicmVzIiwidXNlcklkIiwicGFzc3dvcmQiLCJib2R5IiwiaGFzaCIsInVzZXIiLCJzdGF0dXMiLCJzZW5kIiwicmVzcG9uc2UiLCJlcnJvciIsIm1lc3NhZ2UiLCJzaWduSW4iLCJmaW5kT25lIiwidmFsaWQiLCJjb21wYXJlIiwiRXJyb3IiLCJqc29ud2VidG9rZW4iLCJzaWduIiwiaWQiLCJleHBpcmVzSW4iLCJjb25zb2xlIiwibG9nIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IjQ4RUFlWTt5RkFmWixLQUFNQSxDQUFBQSxJQUFJLHlCQUFHQyxPQUFPLENBQUMsZ0JBQUQsQ0FBVixDQUFWLENBQ0EsS0FBTUMsQ0FBQUEsTUFBTSx5QkFBR0QsT0FBTyxDQUFDLFFBQUQsQ0FBVixDQUFaLENBQ0EsS0FBTUUsQ0FBQUEsR0FBRyx5QkFBR0YsT0FBTyxDQUFDLGNBQUQsQ0FBVixDQUFULEMsdUJBQ0EsS0FBTUcsQ0FBQUEsTUFBTSxDQUFHLE1BQU9DLEdBQVAsQ0FBWUMsR0FBWixHQUFvQiwrQ0FFL0IsR0FBSSxDQUNBLEdBQUksQ0FBRUMsTUFBRixDQUFVQyxRQUFWLDBCQUF1QkgsR0FBRyxDQUFDSSxJQUEzQixDQUFKLENBQ0Q7QUFGQyx1QkFJQUQsUUFBUSxDQUFHLEtBQU1OLENBQUFBLE1BQU0sQ0FBQ1EsSUFBUCxDQUFZRixRQUFaLENBQXNCLEVBQXRCLENBQWpCLENBQ0Q7QUFDQyxHQUFJRyxDQUFBQSxJQUFJLHlCQUFHLEdBQUlYLENBQUFBLElBQUosQ0FBUyxDQUFFTyxNQUFGLENBQVVDLFFBQVYsQ0FBVCxDQUFILENBQVIsQ0FFRjtBQVJFLHVCQVNBRixHQUFHLENBQUNNLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQixDQUNqQixVQUFXQyxRQUFRLENBQUNQLE1BQVQsQ0FBa0IsR0FBbEIsQ0FBd0IseUJBRGxCLENBQXJCLEVBR0gsQ0FBQyxNQUFPUSxLQUFQLENBQWMsd0JBQ1pULEdBQUcsQ0FBQ00sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCLENBQUUsUUFBU0UsS0FBSyxDQUFDQyxPQUFqQixDQUFyQixFQUNILENBQ0osQ0FqQkQsQyx3QkFtQkEsS0FBTUMsQ0FBQUEsTUFBTSxDQUFHLE1BQU9aLEdBQVAsQ0FBWUMsR0FBWixHQUFvQixnREFDL0IsR0FBSSxDQUNBLEdBQUksQ0FBRUMsTUFBRixDQUFVQyxRQUFWLDJCQUF1QkgsR0FBRyxDQUFDSSxJQUEzQixDQUFKLENBQ0EsR0FBSUUsQ0FBQUEsSUFBSSwwQkFBRyxLQUFNWCxDQUFBQSxJQUFJLENBQUNrQixPQUFMLENBQWEsQ0FBRVgsTUFBRixDQUFiLENBQVQsQ0FBUixDQUNBLEdBQUlZLENBQUFBLEtBQUssMEJBQUcsS0FBTWpCLENBQUFBLE1BQU0sQ0FBQ2tCLE9BQVAsQ0FBZVosUUFBZixDQUF5QkcsSUFBSSxDQUFDSCxRQUE5QixDQUFULENBQVQsQ0FIQSx3QkFJQSxHQUFJLENBQUNXLEtBQUwsQ0FBWSxtREFDUixLQUFNLElBQUlFLENBQUFBLEtBQUosQ0FBVSwyQkFBVixDQUFOLENBQ0gsQ0FGRCxnQ0FHQSxLQUFNQyxDQUFBQSxZQUFZLDBCQUFHbkIsR0FBRyxDQUFDb0IsSUFBSixDQUFTLENBQUVDLEVBQUUsQ0FBRWpCLE1BQU4sQ0FBVCxDQUF5QixnQkFBekIsQ0FBMkMsQ0FBRWtCLFNBQVMsQ0FBRSxTQUFiLENBQTNDLENBQUgsQ0FBbEIsQ0FQQSx3QkFRQW5CLEdBQUcsQ0FBQ00sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCLENBQUUsUUFBU1MsWUFBWCxDQUFyQixFQUNILENBQUMsTUFBT1AsS0FBUCxDQUFjLHlCQUNaVyxPQUFPLENBQUNDLEdBQVIsQ0FBWVosS0FBSyxDQUFDQyxPQUFsQixFQURZLHdCQUVaVixHQUFHLENBQUNNLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQixDQUFFLFFBQVNFLEtBQUssQ0FBQ0MsT0FBakIsQ0FBckIsRUFDSCxDQUNKLENBZEQsQyx3QkFlQVksTUFBTSxDQUFDQyxPQUFQLENBQWlCLENBQUV6QixNQUFGLENBQVVhLE1BQVYsQ0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBVc2VyID0gcmVxdWlyZSgnLi4vbW9kZWxzL1VzZXInKTtcclxuY29uc3QgYmNyeXB0ID0gcmVxdWlyZSgnYmNyeXB0Jyk7XHJcbmNvbnN0IGp3dCA9IHJlcXVpcmUoJ2pzb253ZWJ0b2tlbicpO1xyXG5jb25zdCBzaWduVXAgPSBhc3luYyAocmVxLCByZXMpID0+IHtcclxuXHJcbiAgICB0cnkge1xyXG4gICAgICAgIGxldCB7IHVzZXJJZCwgcGFzc3dvcmQgfSA9IHJlcS5ib2R5O1xyXG4gICAgICAgLy8gY29uc29sZS5sb2codXNlcklkLHBhc3N3b3JkKTtcclxuXHJcbiAgICAgICAgcGFzc3dvcmQgPSBhd2FpdCBiY3J5cHQuaGFzaChwYXNzd29yZCwgMTUpO1xyXG4gICAgICAgLy8gY29uc29sZS5sb2cocGFzc3dvcmQpO1xyXG4gICAgICAgIGxldCB1c2VyID0gbmV3IFVzZXIoeyB1c2VySWQsIHBhc3N3b3JkIH0pO1xyXG4gICAgICAgXHJcbiAgICAgIC8vICBsZXQgcmVzcG9uc2UgPSBhd2FpdCB1c2VyLnNhdmUoKTtcclxuICAgICAgICByZXMuc3RhdHVzKDIwMCkuc2VuZCh7XHJcbiAgICAgICAgICAgIFwibWVzc2FnZVwiOiByZXNwb25zZS51c2VySWQgKyBcIiBcIiArICdyZWdpc3RlcmVkIHN1Y2Nlc3NmdWxseSdcclxuICAgICAgICB9KTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgcmVzLnN0YXR1cyg0MDApLnNlbmQoeyBcImVycm9yXCI6IGVycm9yLm1lc3NhZ2UgfSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmNvbnN0IHNpZ25JbiA9IGFzeW5jIChyZXEsIHJlcykgPT4ge1xyXG4gICAgdHJ5IHtcclxuICAgICAgICBsZXQgeyB1c2VySWQsIHBhc3N3b3JkIH0gPSByZXEuYm9keTtcclxuICAgICAgICBsZXQgdXNlciA9IGF3YWl0IFVzZXIuZmluZE9uZSh7IHVzZXJJZCB9KTtcclxuICAgICAgICBsZXQgdmFsaWQgPSBhd2FpdCBiY3J5cHQuY29tcGFyZShwYXNzd29yZCwgdXNlci5wYXNzd29yZCk7XHJcbiAgICAgICAgaWYgKCF2YWxpZCkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJwYXNzd29yZCBkb2VzIG5vdCBtYXRjaGVkXCIpXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IGpzb253ZWJ0b2tlbiA9IGp3dC5zaWduKHsgaWQ6IHVzZXJJZCB9LCAnQ0lTQ09fTUlORFRSRUUnLCB7IGV4cGlyZXNJbjogJzQwMDAwMDAnIH0pO1xyXG4gICAgICAgIHJlcy5zdGF0dXMoMjAwKS5zZW5kKHsgXCJ0b2tlblwiOiBqc29ud2VidG9rZW4gfSk7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGVycm9yLm1lc3NhZ2UpO1xyXG4gICAgICAgIHJlcy5zdGF0dXMoNDAwKS5zZW5kKHsgXCJlcnJvclwiOiBlcnJvci5tZXNzYWdlIH0pO1xyXG4gICAgfVxyXG59XHJcbm1vZHVsZS5leHBvcnRzID0geyBzaWduVXAsIHNpZ25JbiB9Il19